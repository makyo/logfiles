# Generated by Django 2.0.4 on 2018-04-26 20:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='LogFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('contents_hash', models.CharField(max_length=100)),
                ('log_date', models.DateTimeField(null=True)),
                ('medium', models.CharField(blank=True, choices=[('muck', 'MUCK'), ('irc', 'IRC'), ('aim', 'AOL Instant Messenger'), ('tgram', 'Telegram'), ('slack', 'Slack')], max_length=5)),
                ('complete', models.BooleanField(default=True)),
                ('privacy', models.CharField(blank=True, choices=[('public', 'Publicly visible'), ('private', 'Private'), ('back', 'Back-channel (page, whisper, etc)')], max_length=7)),
            ],
        ),
        migrations.CreateModel(
            name='LogLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('line', models.TextField()),
                ('line_num', models.IntegerField()),
                ('line_type', models.CharField(choices=[('DEF', 'Default (uncategorized)'), ('IM', 'Instant Message'), ('Meta', 'Metadata/system message'), ('Say', 'Say/regular message'), ('Pose', 'Pose/`/me` message')], default='DEF', max_length=4)),
                ('line_scope', models.CharField(choices=[('global', 'Globally visible'), ('direct', 'Direct message')], default='global', max_length=6)),
                ('log_file', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='log.LogFile')),
            ],
            options={
                'ordering': ['line_num'],
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('gender', models.CharField(max_length=50)),
                ('notes', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('tag_type', models.CharField(choices=[('u', 'tag'), ('l', 'location'), ('p', 'participant group'), ('m', 'moment'), ('t', 'topic')], default='t', max_length=1)),
            ],
        ),
        migrations.AddField(
            model_name='participant',
            name='group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='alt_group', to='log.Tag'),
        ),
        migrations.AddField(
            model_name='logline',
            name='moments',
            field=models.ManyToManyField(related_name='line_moments', to='log.Tag'),
        ),
        migrations.AddField(
            model_name='logline',
            name='participant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='log.Participant'),
        ),
        migrations.AddField(
            model_name='logline',
            name='topics',
            field=models.ManyToManyField(related_name='line_topics', to='log.Tag'),
        ),
        migrations.AddField(
            model_name='logfile',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location_logs', to='log.Tag'),
        ),
        migrations.AddField(
            model_name='logfile',
            name='tags',
            field=models.ManyToManyField(related_name='logs', to='log.Tag'),
        ),
    ]
